on: 
 workflow_dispatch:
  inputs:
   base-image:
     description: 'Base image'
     default: 'mcr.microsoft.com/oryx/build:azfunc-jamstack-debian-bullseye-20221214.1'
   application-location:
      description: 'Application location'
      default: '/'   

jobs:
  oryx_build_job:
    runs-on: ubuntu-latest
    name: Oryx build
    steps:
      # To use this repository's private action,
      # you must check out the repository
      - name: Checkout
        uses: actions/checkout@v3  
      - name: Install Azure-cli
        uses: elstudio/action-install-azure-cli@v1
      - name: Log in to Azure Container Registry
        uses: docker/login-action@v2.0.0
        with: 
         registry: jamstacktest.azurecr.io
         username: ${{ secrets.AZURE_CLIENT_ID }}
         password: ${{ secrets.AZURE_CLIENT_SECRET }} 
       # This is a separate action that sets up buildx runner
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1    
      - name: Cache docker layers
        id: cache
        uses: actions/cache@v2
        with:
         path: /tmp/.buildx-cache
         key: ${{ runner.os }}-buildx-${{ github.sha }}
         restore-keys: |
          ${{ runner.os }}-buildx-    
      - name: Docker image ls
        run: docker image ls --digests --no-trunc   
      - name: Cache NPM dependencies
        uses: actions/cache@v3
        with:
         path: |
           .npm
           node_modules
         key: ${{ runner.OS }}-npm2-cache-${{ hashFiles('**/package-lock.json') }}
         restore-keys: |
          ${{ runner.OS }}-npm2-cache-   
      # And make it available for builds
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: false
          tags: jamstacktest.azurecr.io/oryx/build:azfunc-jamstack-debian-bullseye-Install-libedit
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Docker pull step
        run: docker pull jamstacktest.azurecr.io/oryx/build:azfunc-jamstack-debian-bullseye-Install-libedit   
      - name: Docker image ls
        run: docker image ls --digests --no-trunc 
      - name: Oryx build step
        uses: ./ # Uses an action in the root directory
        id: oryx-build
        with:
          app-location: "/"
      - name: Docker image ls
        run: docker image ls --digests --no-trunc
 